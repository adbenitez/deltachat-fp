unit hDeltachat;

{
  deltachat.h 1.38 header binding for Free Pascal

  This Source Code Form is subject to the terms of the Mozilla Public
  License, v. 2.0. If a copy of the MPL was not distributed with this
  file, You can obtain one at http://mozilla.org/MPL/2.0/.
}

{$linklib 'libdeltachat.a'}

{$linklib m}
{$linklib pthread}
{$linklib unwind}
{$linklib dl}
{$linklib c}

interface

uses ctypes;

const
  DC_GCL_ARCHIVED_ONLY = $01;
  DC_GCL_NO_SPECIALS = $02;
  DC_GCL_ADD_ALLDONE_HINT = $04;
  DC_GCL_FOR_FORWARDING = $08;
  DC_GCM_ADDDAYMARKER = $01;
  DC_GCL_VERIFIED_ONLY = $01;
  DC_GCL_ADD_SELF = $02;
  DC_IMEX_EXPORT_SELF_KEYS = 1;
  DC_IMEX_IMPORT_SELF_KEYS = 2;
  DC_IMEX_EXPORT_BACKUP = 11;
  DC_IMEX_IMPORT_BACKUP = 12;
  DC_QR_ASK_VERIFYCONTACT = 200;
  DC_QR_ASK_VERIFYGROUP = 202;
  DC_QR_FPR_OK = 210;
  DC_QR_FPR_MISMATCH = 220;
  DC_QR_FPR_WITHOUT_ADDR = 230;
  DC_QR_ACCOUNT = 250;
  DC_QR_ADDR = 320;
  DC_QR_TEXT = 330;
  DC_QR_URL = 332;
  DC_QR_ERROR = 400;
  DC_CHAT_ID_DEADDROP = 1;
  DC_CHAT_ID_TRASH = 3;
  DC_CHAT_ID_MSGS_IN_CREATION = 4;
  DC_CHAT_ID_STARRED = 5;
  DC_CHAT_ID_ARCHIVED_LINK = 6;
  DC_CHAT_ID_ALLDONE_HINT = 7;
  DC_CHAT_ID_LAST_SPECIAL = 9;
  DC_CHAT_TYPE_UNDEFINED = 0;
  DC_CHAT_TYPE_SINGLE = 100;
  DC_CHAT_TYPE_GROUP = 120;
  DC_CHAT_TYPE_VERIFIED_GROUP = 130;
  DC_MSG_ID_MARKER1 = 1;
  DC_MSG_ID_DAYMARKER = 9;
  DC_MSG_ID_LAST_SPECIAL = 9;
  DC_STATE_UNDEFINED = 0;
  DC_STATE_IN_FRESH = 10;
  DC_STATE_IN_NOTICED = 13;
  DC_STATE_IN_SEEN = 16;
  DC_STATE_OUT_PREPARING = 18;
  DC_STATE_OUT_DRAFT = 19;
  DC_STATE_OUT_PENDING = 20;
  DC_STATE_OUT_FAILED = 24;
  DC_STATE_OUT_DELIVERED = 26;
  DC_STATE_OUT_MDN_RCVD = 28;
  DC_MAX_GET_TEXT_LEN = 30000;
  DC_MAX_GET_INFO_LEN = 100000;
  DC_CONTACT_ID_SELF = 1;
  DC_CONTACT_ID_INFO = 2;
  DC_CONTACT_ID_DEVICE = 5;
  DC_CONTACT_ID_LAST_SPECIAL = 9;
  DC_TEXT1_DRAFT = 1;
  DC_TEXT1_USERNAME = 2;
  DC_TEXT1_SELF = 3;
  DC_MSG_TEXT = 10;
  DC_MSG_IMAGE = 20;
  DC_MSG_GIF = 21;
  DC_MSG_STICKER = 23;
  DC_MSG_AUDIO = 40;
  DC_MSG_VOICE = 41;
  DC_MSG_VIDEO = 50;
  DC_MSG_FILE = 60;
  DC_LP_AUTH_OAUTH2 = $2;
  DC_LP_AUTH_NORMAL = $4;
  DC_LP_IMAP_SOCKET_STARTTLS = $100;
  DC_LP_IMAP_SOCKET_SSL = $200;
  DC_LP_IMAP_SOCKET_PLAIN = $400;
  DC_LP_SMTP_SOCKET_STARTTLS = $10000;
  DC_LP_SMTP_SOCKET_SSL = $20000;
  DC_LP_SMTP_SOCKET_PLAIN = $40000;
  DC_LP_AUTH_FLAGS = DC_LP_AUTH_OAUTH2 or DC_LP_AUTH_NORMAL;
  DC_LP_IMAP_SOCKET_FLAGS =
    (DC_LP_IMAP_SOCKET_STARTTLS or DC_LP_IMAP_SOCKET_SSL) or DC_LP_IMAP_SOCKET_PLAIN;
  DC_LP_SMTP_SOCKET_FLAGS =
    (DC_LP_SMTP_SOCKET_STARTTLS or DC_LP_SMTP_SOCKET_SSL) or DC_LP_SMTP_SOCKET_PLAIN;
  DC_CERTCK_AUTO = 0;
  DC_CERTCK_STRICT = 1;
  DC_CERTCK_ACCEPT_INVALID_CERTIFICATES = 3;
  DC_EMPTY_MVBOX = $01;
  DC_EMPTY_INBOX = $02;
  DC_EVENT_INFO = 100;
  DC_EVENT_SMTP_CONNECTED = 101;
  DC_EVENT_IMAP_CONNECTED = 102;
  DC_EVENT_SMTP_MESSAGE_SENT = 103;
  DC_EVENT_IMAP_MESSAGE_DELETED = 104;
  DC_EVENT_IMAP_MESSAGE_MOVED = 105;
  DC_EVENT_IMAP_FOLDER_EMPTIED = 106;
  DC_EVENT_NEW_BLOB_FILE = 150;
  DC_EVENT_DELETED_BLOB_FILE = 151;
  DC_EVENT_WARNING = 300;
  DC_EVENT_ERROR = 400;
  DC_EVENT_ERROR_NETWORK = 401;
  DC_EVENT_ERROR_SELF_NOT_IN_GROUP = 410;
  DC_EVENT_MSGS_CHANGED = 2000;
  DC_EVENT_INCOMING_MSG = 2005;
  DC_EVENT_MSG_DELIVERED = 2010;
  DC_EVENT_MSG_FAILED = 2012;
  DC_EVENT_MSG_READ = 2015;
  DC_EVENT_CHAT_MODIFIED = 2020;
  DC_EVENT_CONTACTS_CHANGED = 2030;
  DC_EVENT_LOCATION_CHANGED = 2035;
  DC_EVENT_CONFIGURE_PROGRESS = 2041;
  DC_EVENT_IMEX_PROGRESS = 2051;
  DC_EVENT_IMEX_FILE_WRITTEN = 2052;
  DC_EVENT_SECUREJOIN_INVITER_PROGRESS = 2060;
  DC_EVENT_SECUREJOIN_JOINER_PROGRESS = 2061;
  DC_EVENT_FILE_COPIED = 2055;
  DC_EVENT_IS_OFFLINE = 2081;
  DC_EVENT_GET_STRING = 2091;
  DC_ERROR_SEE_STRING = 0;
  DC_ERROR_SELF_NOT_IN_GROUP = 1;
  DC_STR_SELFNOTINGRP = 21;
  DC_SHOW_EMAILS_OFF = 0;
  DC_SHOW_EMAILS_ACCEPTED_CONTACTS = 1;
  DC_SHOW_EMAILS_ALL = 2;
  DC_MEDIA_QUALITY_BALANCED = 0;
  DC_MEDIA_QUALITY_WORSE = 1;
  DC_KEY_GEN_DEFAULT = 0;
  DC_KEY_GEN_RSA2048 = 1;
  DC_KEY_GEN_ED25519 = 2;
  DC_PROVIDER_STATUS_OK = 1;
  DC_PROVIDER_STATUS_PREPARATION = 2;
  DC_PROVIDER_STATUS_BROKEN = 3;
  DC_CHAT_VISIBILITY_NORMAL = 0;
  DC_CHAT_VISIBILITY_ARCHIVED = 1;
  DC_CHAT_VISIBILITY_PINNED = 2;
  DC_STR_NOMESSAGES = 1;
  DC_STR_SELF = 2;
  DC_STR_DRAFT = 3;
  DC_STR_VOICEMESSAGE = 7;
  DC_STR_DEADDROP = 8;
  DC_STR_IMAGE = 9;
  DC_STR_VIDEO = 10;
  DC_STR_AUDIO = 11;
  DC_STR_FILE = 12;
  DC_STR_STATUSLINE = 13;
  DC_STR_NEWGROUPDRAFT = 14;
  DC_STR_MSGGRPNAME = 15;
  DC_STR_MSGGRPIMGCHANGED = 16;
  DC_STR_MSGADDMEMBER = 17;
  DC_STR_MSGDELMEMBER = 18;
  DC_STR_MSGGROUPLEFT = 19;
  DC_STR_GIF = 23;
  DC_STR_ENCRYPTEDMSG = 24;
  DC_STR_E2E_AVAILABLE = 25;
  DC_STR_ENCR_TRANSP = 27;
  DC_STR_ENCR_NONE = 28;
  DC_STR_CANTDECRYPT_MSG_BODY = 29;
  DC_STR_FINGERPRINTS = 30;
  DC_STR_READRCPT = 31;
  DC_STR_READRCPT_MAILBODY = 32;
  DC_STR_MSGGRPIMGDELETED = 33;
  DC_STR_E2E_PREFERRED = 34;
  DC_STR_CONTACT_VERIFIED = 35;
  DC_STR_CONTACT_NOT_VERIFIED = 36;
  DC_STR_CONTACT_SETUP_CHANGED = 37;
  DC_STR_ARCHIVEDCHATS = 40;
  DC_STR_STARREDMSGS = 41;
  DC_STR_AC_SETUP_MSG_SUBJECT = 42;
  DC_STR_AC_SETUP_MSG_BODY = 43;
  DC_STR_CANNOT_LOGIN = 60;
  DC_STR_SERVER_RESPONSE = 61;
  DC_STR_MSGACTIONBYUSER = 62;
  DC_STR_MSGACTIONBYME = 63;
  DC_STR_MSGLOCATIONENABLED = 64;
  DC_STR_MSGLOCATIONDISABLED = 65;
  DC_STR_LOCATION = 66;
  DC_STR_STICKER = 67;
  DC_STR_DEVICE_MESSAGES = 68;
  DC_STR_SAVED_MESSAGES = 69;
  DC_STR_DEVICE_MESSAGES_HINT = 70;
  DC_STR_WELCOME_MESSAGE = 71;
  DC_STR_UNKNOWN_SENDER_FOR_CHAT = 72;
  DC_STR_SUBJECT_FOR_NEW_CONTACT = 73;
  DC_STR_FAILED_SENDING_TO = 74;
  DC_STR_COUNT = 74;

type
  PDcArray = Pointer;
  PDcChat = Pointer;
  PDcChatlist = Pointer;
  PDcContact = Pointer;
  PDcContext = Pointer;
  PDcEventEmitter = Pointer;
  PDcEvent = Pointer;
  PDcLot = Pointer;
  PDcMsg = Pointer;
  PDcProvider = Pointer;

function dc_context_new(os_name: PChar; dbfile: PChar; blobdir: PChar): PDcContext;
  cdecl; external;
procedure dc_context_unref(context: PDcContext); cdecl; external;
function dc_get_event_emitter(context: PDcContext): PDcEventEmitter;
  cdecl; external;
function dc_get_blobdir(context: PDcContext): PChar; cdecl; external;
function dc_set_config(context: PDcContext; key: PChar; Value: PChar): cint;
  cdecl; external;
function dc_get_config(context: PDcContext; key: PChar): PChar;
  cdecl; external;
function dc_set_stock_translation(context: PDcContext; stock_id: cuint32;
  stock_msg: PChar): cint; cdecl; external;
function dc_set_config_from_qr(context: PDcContext; qr: PChar): cint;
  cdecl; external;
function dc_get_info(context: PDcContext): PChar; cdecl; external;
function dc_get_oauth2_url(context: PDcContext; addr: PChar; redirect_uri: PChar): PChar;
  cdecl; external;
procedure dc_configure(context: PDcContext); cdecl; external;
function dc_is_configured(context: PDcContext): cint; cdecl; external;
procedure dc_start_io(context: PDcContext); cdecl; external;
function dc_is_io_running(context: PDcContext): cint; cdecl; external;
procedure dc_stop_io(context: PDcContext); cdecl; external;
procedure dc_maybe_network(context: PDcContext); cdecl; external;
function dc_preconfigure_keypair(context: PDcContext; addr: PChar;
  public_data: PChar; secret_data: PChar): cint; cdecl; external;
function dc_get_chatlist(context: PDcContext; flags: cint;
  query_str: PChar; query_id: cuint32): PDcChatlist; cdecl; external;
function dc_create_chat_by_msg_id(context: PDcContext; msg_id: cuint32): cuint32;
  cdecl; external;
function dc_create_chat_by_contact_id(context: PDcContext; contact_id: cuint32): cuint32;
  cdecl; external;
function dc_get_chat_id_by_contact_id(context: PDcContext; contact_id: cuint32): cuint32;
  cdecl; external;
function dc_prepare_msg(context: PDcContext; chat_id: cuint32; msg: PDcMsg): cuint32;
  cdecl; external;
function dc_send_msg(context: PDcContext; chat_id: cuint32; msg: PDcMsg): cuint32;
  cdecl; external;
function dc_send_msg_sync(context: PDcContext; chat_id: cuint32; msg: PDcMsg): cuint32;
  cdecl; external;
function dc_send_text_msg(context: PDcContext; chat_id: cuint32;
  text_to_send: PChar): cuint32; cdecl; external;
procedure dc_set_draft(context: PDcContext; chat_id: cuint32; msg: PDcMsg);
  cdecl; external;
function dc_add_device_msg(context: PDcContext; _label: PChar; msg: PDcMsg): cuint32;
  cdecl; external;
procedure dc_update_device_chats(context: PDcContext); cdecl; external;
function dc_was_device_msg_ever_added(context: PDcContext; _label: PChar): cint;
  cdecl; external;
function dc_get_draft(context: PDcContext; chat_id: cuint32): PDcMsg;
  cdecl; external;
function dc_get_chat_msgs(context: PDcContext; chat_id: cuint32;
  flags: cuint32; marker1before: cuint32): PDcArray; cdecl; external;
function dc_get_msg_cnt(context: PDcContext; chat_id: cuint32): cint;
  cdecl; external;
function dc_get_fresh_msg_cnt(context: PDcContext; chat_id: cuint32): cint;
  cdecl; external;
function dc_estimate_deletion_cnt(context: PDcContext; from_server: cint;
  seconds: cint64): cint; cdecl; external;
function dc_get_fresh_msgs(context: PDcContext): PDcArray; cdecl; external;
procedure dc_marknoticed_chat(context: PDcContext; chat_id: cuint32);
  cdecl; external;
procedure dc_marknoticed_all_chats(context: PDcContext); cdecl; external;
function dc_get_chat_media(context: PDcContext; chat_id: cuint32;
  msg_type: cint; msg_type2: cint; msg_type3: cint): PDcArray;
  cdecl; external;
function dc_get_next_media(context: PDcContext; msg_id: cuint32;
  dir: cint; msg_type: cint; msg_type2: cint; msg_type3: cint): cuint32;
  cdecl; external;
procedure dc_set_chat_visibility(context: PDcContext; chat_id: cuint32;
  visibility: cint); cdecl; external;
procedure dc_delete_chat(context: PDcContext; chat_id: cuint32);
  cdecl; external;
function dc_get_chat_contacts(context: PDcContext; chat_id: cuint32): PDcArray;
  cdecl; external;
function dc_search_msgs(context: PDcContext; chat_id: cuint32; query: PChar): PDcArray;
  cdecl; external;
function dc_get_chat(context: PDcContext; chat_id: cuint32): PDcChat;
  cdecl; external;
function dc_create_group_chat(context: PDcContext; verified: cint;
  Name: PChar): cuint32; cdecl; external;
function dc_is_contact_in_chat(context: PDcContext; chat_id: cuint32;
  contact_id: cuint32): cint; cdecl; external;
function dc_add_contact_to_chat(context: PDcContext; chat_id: cuint32;
  contact_id: cuint32): cint; cdecl; external;
function dc_remove_contact_from_chat(context: PDcContext; chat_id: cuint32;
  contact_id: cuint32): cint; cdecl; external;
function dc_set_chat_name(context: PDcContext; chat_id: cuint32; Name: PChar): cint;
  cdecl; external;
function dc_set_chat_profile_image(context: PDcContext; chat_id: cuint32;
  image: PChar): cint; cdecl; external;
function dc_set_chat_mute_duration(context: PDcContext; chat_id: cuint32;
  duration: cint64): cint; cdecl; external;
function dc_get_msg_info(context: PDcContext; msg_id: cuint32): PChar;
  cdecl; external;
function dc_get_mime_headers(context: PDcContext; msg_id: cuint32): PChar;
  cdecl; external;
procedure dc_delete_msgs(context: PDcContext; msg_ids: pcuint32; msgCnt: cint);
  cdecl; external;
procedure dc_empty_server(context: PDcContext; flags: cuint32); cdecl;
  external;
procedure dc_forward_msgs(context: PDcContext; msg_ids: pcuint32;
  msg_cnt: cint; chat_id: cuint32); cdecl; external;
procedure dc_marknoticed_contact(context: PDcContext; contact_id: cuint32);
  cdecl; external;
procedure dc_markseen_msgs(context: PDcContext; msg_ids: pcuint32; msg_cnt: cint);
  cdecl; external;
procedure dc_star_msgs(context: PDcContext; msg_ids: pcuint32;
  msg_cnt: cint; star: cint); cdecl; external;
function dc_get_msg(context: PDcContext; msg_id: cuint32): PDcMsg;
  cdecl; external;
function dc_may_be_valid_addr(addr: PChar): cint; cdecl; external;
function dc_lookup_contact_id_by_addr(context: PDcContext; addr: PChar): cuint32;
  cdecl; external;
function dc_create_contact(context: PDcContext; Name: PChar; addr: PChar): cuint32;
  cdecl; external;
function dc_add_address_book(context: PDcContext; addr_book: PChar): cint;
  cdecl; external;
function dc_get_contacts(context: PDcContext; flags: cuint32; query: PChar): PDcArray;
  cdecl; external;
function dc_get_blocked_cnt(context: PDcContext): cint; cdecl; external;
function dc_get_blocked_contacts(context: PDcContext): PDcArray;
  cdecl; external;
procedure dc_block_contact(context: PDcContext; contact_id: cuint32; block: cint);
  cdecl; external;
function dc_get_contact_encrinfo(context: PDcContext; contact_id: cuint32): PChar;
  cdecl; external;
function dc_delete_contact(context: PDcContext; contact_id: cuint32): cint;
  cdecl; external;
function dc_get_contact(context: PDcContext; contact_id: cuint32): PDcContact;
  cdecl; external;
procedure dc_imex(context: PDcContext; what: cint; param1: PChar; param2: PChar);
  cdecl; external;
function dc_imex_has_backup(context: PDcContext; dir: PChar): PChar;
  cdecl; external;
function dc_initiate_key_transfer(context: PDcContext): PChar;
  cdecl; external;
function dc_continue_key_transfer(context: PDcContext; msg_id: cuint32;
  setup_code: PChar): cint; cdecl; external;
procedure dc_stop_ongoing_process(context: PDcContext); cdecl; external;
function dc_check_qr(context: PDcContext; qr: PChar): PDcLot; cdecl;
  external;
function dc_get_securejoin_qr(context: PDcContext; chat_id: cuint32): PChar;
  cdecl; external;
function dc_join_securejoin(context: PDcContext; qr: PChar): cuint32;
  cdecl; external;
procedure dc_send_locations_to_chat(context: PDcContext; chat_id: cuint32;
  seconds: cint); cdecl; external;
function dc_is_sending_locations_to_chat(context: PDcContext; chat_id: cuint32): cint;
  cdecl; external;
function dc_set_location(context: PDcContext; latitude: double;
  longitude: double; accuracy: double): cint; cdecl; external;
function dc_get_locations(context: PDcContext; chat_id: cuint32;
  contact_id: cuint32; timestamp_begin: cint64; timestamp_end: cint64): PDcArray;
  cdecl; external;
procedure dc_delete_all_locations(context: PDcContext); cdecl; external;
procedure dc_str_unref(str: PChar); cdecl; external;
procedure dc_array_unref(arr: PDcArray); cdecl; external;
function dc_array_get_cnt(arr: PDcArray):csize_t; cdecl; external;
function dc_array_get_id(arr: PDcArray; index:csize_t): cuint32; cdecl;
  external;
function dc_array_get_latitude(arr: PDcArray; index:csize_t): double;
  cdecl; external;
function dc_array_get_longitude(arr: PDcArray; index:csize_t): double;
  cdecl; external;
function dc_array_get_accuracy(arr: PDcArray; index:csize_t): double;
  cdecl; external;
function dc_array_get_timestamp(arr: PDcArray; index:csize_t): cint64;
  cdecl; external;
function dc_array_get_chat_id(arr: PDcArray; index:csize_t): cuint32;
  cdecl; external;
function dc_array_get_contact_id(arr: PDcArray; index:csize_t): cuint32;
  cdecl; external;
function dc_array_get_msg_id(arr: PDcArray; index:csize_t): cuint32;
  cdecl; external;
function dc_array_get_marker(arr: PDcArray; index:csize_t): PChar;
  cdecl; external;
function dc_array_is_independent(arr: PDcArray; index:csize_t): cint;
  cdecl; external;
function dc_array_search_id(arr: PDcArray; needle: cuint32; ret_index: pcsize_t): cint;
  cdecl; external;
function dc_array_get_raw(arr: PDcArray): pcuint32; cdecl; external;
procedure dc_chatlist_unref(chatlist: PDcChatlist); cdecl; external;
function dc_chatlist_get_cnt(chatlist: PDcChatlist): csize_t; cdecl;
  external;
function dc_chatlist_get_chat_id(chatlist: PDcChatlist; index: csize_t): cuint32;
  cdecl; external;
function dc_chatlist_get_msg_id(chatlist: PDcChatlist; index:csize_t): cuint32;
  cdecl; external;
function dc_chatlist_get_summary(chatlist: PDcChatlist; index:csize_t;
  chat: PDcChat): PDcLot; cdecl; external;
function dc_chatlist_get_context(chatlist: PDcChatlist): PDcContext;
  cdecl; external;
function dc_chat_get_info_json(context: PDcContext; chat_id:csize_t): PChar;
  cdecl; external;
procedure dc_chat_unref(chat: PDcChat); cdecl; external;
function dc_chat_get_id(chat: PDcChat): cuint32; cdecl; external;
function dc_chat_get_type(chat: PDcChat): cint; cdecl; external;
function dc_chat_get_name(chat: PDcChat): PChar; cdecl; external;
function dc_chat_get_profile_image(chat: PDcChat): PChar; cdecl; external;
function dc_chat_get_color(chat: PDcChat): cuint32; cdecl; external;
function dc_chat_get_visibility(chat: PDcChat): cint; cdecl; external;
function dc_chat_is_unpromoted(chat: PDcChat): cint; cdecl; external;
function dc_chat_is_self_talk(chat: PDcChat): cint; cdecl; external;
function dc_chat_is_device_talk(chat: PDcChat): cint; cdecl; external;
function dc_chat_can_send(chat: PDcChat): cint; cdecl; external;
function dc_chat_is_verified(chat: PDcChat): cint; cdecl; external;
function dc_chat_is_sending_locations(chat: PDcChat): cint;
  cdecl; external;
function dc_chat_is_muted(chat: PDcChat): cint; cdecl; external;
function dc_chat_get_remaining_mute_duration(chat: PDcChat): cint64;
  cdecl; external;
function dc_msg_new(context: PDcContext; viewtype: cint): PDcMsg;
  cdecl; external;
procedure dc_msg_unref(msg: PDcMsg); cdecl; external;
function dc_msg_get_id(msg: PDcMsg): cuint32; cdecl; external;
function dc_msg_get_from_id(msg: PDcMsg): cuint32; cdecl; external;
function dc_msg_get_chat_id(msg: PDcMsg): cuint32; cdecl; external;
function dc_msg_get_viewtype(msg: PDcMsg): cint; cdecl; external;
function dc_msg_get_state(msg: PDcMsg): cint; cdecl; external;
function dc_msg_get_timestamp(msg: PDcMsg): cint64; cdecl; external;
function dc_msg_get_received_timestamp(msg: PDcMsg): cint64; cdecl;
  external;
function dc_msg_get_sort_timestamp(msg: PDcMsg): cint64; cdecl; external;
function dc_msg_get_text(msg: PDcMsg): PChar; cdecl; external;
function dc_msg_get_file(msg: PDcMsg): PChar; cdecl; external;
function dc_msg_get_filename(msg: PDcMsg): PChar; cdecl; external;
function dc_msg_get_filemime(msg: PDcMsg): PChar; cdecl; external;
function dc_msg_get_filebytes(msg: PDcMsg): cuint64; cdecl; external;
function dc_msg_get_width(msg: PDcMsg): cint; cdecl; external;
function dc_msg_get_height(msg: PDcMsg): cint; cdecl; external;
function dc_msg_get_duration(msg: PDcMsg): cint; cdecl; external;
function dc_msg_get_showpadlock(msg: PDcMsg): cint; cdecl; external;
function dc_msg_get_summary(msg: PDcMsg; chat: PDcChat): PDcLot; cdecl;
  external;
function dc_msg_get_summarytext(msg: PDcMsg; approx_characters: cint): PChar;
  cdecl; external;
function dc_msg_has_deviating_timestamp(msg: PDcMsg): cint;
  cdecl; external;
function dc_msg_has_location(msg: PDcMsg): cint; cdecl; external;
function dc_msg_is_sent(msg: PDcMsg): cint; cdecl; external;
function dc_msg_is_starred(msg: PDcMsg): cint; cdecl; external;
function dc_msg_is_forwarded(msg: PDcMsg): cint; cdecl; external;
function dc_msg_is_info(msg: PDcMsg): cint; cdecl; external;
function dc_msg_is_increation(msg: PDcMsg): cint; cdecl; external;
function dc_msg_is_setupmessage(msg: PDcMsg): cint; cdecl; external;
function dc_msg_get_setupcodebegin(msg: PDcMsg): PChar; cdecl; external;
procedure dc_msg_set_text(msg: PDcMsg; Text: PChar); cdecl; external;
procedure dc_msg_set_file(msg: PDcMsg; filename: PChar; filemime: PChar);
  cdecl; external;
procedure dc_msg_set_dimension(msg: PDcMsg; Width: cint; Height: cint);
  cdecl; external;
procedure dc_msg_set_duration(msg: PDcMsg; duration: cint); cdecl;
  external;
procedure dc_msg_set_location(msg: PDcMsg; latitude: double; longitude: double);
  cdecl; external;
procedure dc_msg_latefiling_mediasize(msg: PDcMsg; Width: cint;
  Height: cint; duration: cint); cdecl; external;
procedure dc_contact_unref(contact: PDcContact); cdecl; external;
function dc_contact_get_id(contact: PDcContact): cuint32; cdecl; external;
function dc_contact_get_addr(contact: PDcContact): PChar; cdecl; external;
function dc_contact_get_name(contact: PDcContact): PChar; cdecl; external;
function dc_contact_get_display_name(contact: PDcContact): PChar;
  cdecl; external;
function dc_contact_get_name_n_addr(contact: PDcContact): PChar;
  cdecl; external;
function dc_contact_get_first_name(contact: PDcContact): PChar;
  cdecl; external;
function dc_contact_get_profile_image(contact: PDcContact): PChar;
  cdecl; external;
function dc_contact_get_color(contact: PDcContact): cuint32; cdecl;
  external;
function dc_contact_is_blocked(contact: PDcContact): cint;
  cdecl; external;
function dc_contact_is_verified(contact: PDcContact): cint;
  cdecl; external;
function dc_provider_new_from_email(context: PDcContext; email: PChar): PDcProvider;
  cdecl; external;
function dc_provider_get_overview_page(provider: PDcProvider): PChar;
  cdecl; external;
function dc_provider_get_before_login_hint(provider: PDcProvider): PChar;
  cdecl; external;
function dc_provider_get_status(provider: PDcProvider): cint;
  cdecl; external;
procedure dc_provider_unref(provider: PDcProvider); cdecl; external;
procedure dc_lot_unref(lot: PDcLot); cdecl; external;
function dc_lot_get_text1(lot: PDcLot): PChar; cdecl; external;
function dc_lot_get_text2(lot: PDcLot): PChar; cdecl; external;
function dc_lot_get_text1_meaning(lot: PDcLot): cint; cdecl; external;
function dc_lot_get_state(lot: PDcLot): cint; cdecl; external;
function dc_lot_get_id(lot: PDcLot): cuint32; cdecl; external;
function dc_lot_get_timestamp(lot: PDcLot): cint64; cdecl; external;
function dc_get_next_event(emitter: PDcEventEmitter): PDcEvent; cdecl;
  external;
procedure dc_event_emitter_unref(emitter: PDcEventEmitter); cdecl;
  external;
function dc_event_get_id(event: PDcEvent): cint; cdecl; external;
function dc_event_get_data1_int(event: PDcEvent): cint; cdecl; external;
function dc_event_get_data2_int(event: PDcEvent): cint; cdecl; external;
function dc_event_get_data2_str(event: PDcEvent): PChar; cdecl; external;
procedure dc_event_unref(event: PDcEvent); cdecl; external;

implementation
end.
